{"version":3,"sources":["Componets/Gif.js","Componets/Trends.js","Componets/Text.js","Componets/Category.js","Componets/Search.js","Componets/LikeList.js","Componets/Section.js","Componets/Main.js","Componets/Preview.js","App.js","reportWebVitals.js","index.js"],"names":["Gif","gif","useContext","Context","store","dispatch","title","images","user","trending_datetime","id","className","style","background","original","url","ll","find","item","onClick","type","payload","Icon","fontSize","console","log","prevGif","href","Giphy","key","useState","setGif","useEffect","fetch","then","response","json","data","length","map","Text","loading","setLoading","text","setText","onChange","e","target","value","q","Category","categories","setCategories","gifsArreys","setGifsArreys","current","setCurrent","setValue","showAside","setShowAside","getGifs","filter","cat","name","includes","lc","color","src","alt","Search","req","setReq","LikeList","margin","Section","category","gifsArrey","setArrey","slice","Main","Preview","avatar_url","display_name","profile_url","instagram_url","split","reverse","join","createContext","reducer","action","tab","showLL","alert","App","useReducer","setTimeout","localStorage","getItem","JSON","parse","setItem","stringify","Provider","Trends","Alert","severity","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c284767e.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { Context } from \"../App\";\r\n\r\nconst Gif = ({ gif }) => {\r\n  const { store, dispatch } = useContext(Context);\r\n\r\n  const { title, user, trending_datetime, images, id } = gif;\r\n  return (\r\n    <div className=\"gif\" style={{ background: `url(${images.original.url})` }}>\r\n      <div className=\"content col centered\">\r\n        <h2 className=\"tittle_card\">{title}</h2>\r\n        <div className=\"row centered\">\r\n          {store.ll.find((item) => item.id === id) ? (\r\n            <span\r\n              onClick={() => dispatch({ type: \"remove_from_ll\", payload: gif })}\r\n            >\r\n              <Icon fontSize=\"large\">favorite</Icon>\r\n            </span>\r\n          ) : (\r\n            <span onClick={() => dispatch({ type: \"add_to_ll\", payload: gif })}>\r\n              <Icon fontSize=\"large\">favorite_border</Icon>\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"icon\"\r\n            onClick={() => {\r\n              dispatch({ type: \"add_prev_gif\", payload: gif });\r\n              console.log(gif);\r\n              console.log(store.prevGif);\r\n            }}\r\n          >\r\n            <Icon>info</Icon>\r\n          </span>\r\n          <span className=\"icon\">\r\n            <a href={images.original.url}>\r\n              <Icon>download</Icon>\r\n            </a>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gif;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Context } from \"../App\";\r\nimport Gif from \"./Gif\";\r\n\r\nconst Giphy = () => {\r\n  const { key } = useContext(Context);\r\n  const [gif, setGif] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.giphy.com/v1/gifs/trending?api_key=${key}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setGif(data.data);\r\n        console.log(data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"col centered\">\r\n      <h1>Trends</h1>\r\n      <div className=\"wrapper row centered\">\r\n        {gif?.length > 0 ? (\r\n          gif.map((gif) => <Gif gif={gif} />)\r\n        ) : (\r\n          <h1>Loading</h1>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Giphy;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Context } from \"../App\";\r\nimport Gif from \"./Gif\";\r\n\r\nconst Text = () => {\r\n  const { key } = useContext(Context);\r\n\r\n  const getGifs = (q) => {\r\n    setLoading(true);\r\n    fetch(`https://api.giphy.com/v1/gifs/translate?api_key=${key}&s=${q}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setLoading(false);\r\n        setGif(data.data);\r\n        console.log(data);\r\n      });\r\n  };\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [text, setText] = useState(\"\");\r\n  const [gif, setGif] = useState();\r\n  return (\r\n    <div className=\"col centered text\">\r\n      <h1>Enter a random word</h1>\r\n      <div className=\"row centered\">\r\n        <input\r\n          className=\"input_t_s\"\r\n          type=\"text\"\r\n          onChange={(e) => setText(e.target.value)}\r\n          value={text}\r\n        />\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            setText(\"\");\r\n            getGifs(text);\r\n          }}\r\n        >\r\n          Create\r\n        </button>\r\n      </div>\r\n      {loading && <h1>Loading...</h1>}\r\n      <div className=\"wrapper row\">{gif && <Gif gif={gif} />}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Context } from \"../App\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Gif from \"./Gif\";\r\n\r\nconst Category = () => {\r\n  const { store, dispatch, key } = useContext(Context);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [gifsArreys, setGifsArreys] = useState([]);\r\n  const [current, setCurrent] = useState();\r\n  const [value, setValue] = useState();\r\n  const [showAside, setShowAside] = useState(true);\r\n\r\n  const getCategories = () => {\r\n    setLoading(true);\r\n    fetch(`https://api.giphy.com/v1/gifs/categories?api_key=${key}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setLoading(false);\r\n        console.log(data);\r\n        setCategories(data.data);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getGifs(current);\r\n  }, [current]);\r\n\r\n  const getGifs = (q) => {\r\n    if (q) {\r\n      fetch(`https://api.giphy.com/v1/gifs/search?api_key=${key}&q=${q}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setLoading(false);\r\n          setGifsArreys(data.data);\r\n          console.log(data);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"col centered\">\r\n      {!current ? (\r\n        <h1>Select category</h1>\r\n      ) : (\r\n        <h1>Category: {current && current}</h1>\r\n      )}\r\n      <div className=\"row centered\">\r\n        {showAside ? (\r\n          <aside className=\"col\">\r\n            <span className=\"icon-close\" onClick={() => setShowAside(false)}>\r\n              <Icon>close</Icon>\r\n            </span>\r\n            <div className=\"row centered search-input\">\r\n              <input type=\"text\" onChange={(e) => setValue(e.target.value)} />\r\n              <Icon>search</Icon>\r\n            </div>\r\n            {categories.length > 0 && value\r\n              ? categories\r\n                  .filter((cat) => cat.name.includes(value))\r\n                  .map((cat) => (\r\n                    <div className=\"row centered category-tittle\">\r\n                      <h3 onClick={() => setCurrent(cat.name)}>{cat.name}</h3>\r\n                      <div className=\"row centered\">\r\n                        {store.lc.find((item) => item === cat.name) ? (\r\n                          <span\r\n                            style={{ color: \"red\" }}\r\n                            className=\"icon\"\r\n                            onClick={() =>\r\n                              dispatch({\r\n                                type: \"remove_from_lc\",\r\n                                payload: cat.name,\r\n                              })\r\n                            }\r\n                          >\r\n                            <Icon>favorite</Icon>\r\n                          </span>\r\n                        ) : (\r\n                          <span\r\n                            className=\"icon\"\r\n                            onClick={() =>\r\n                              dispatch({ type: \"add_lc\", payload: cat.name })\r\n                            }\r\n                          >\r\n                            <Icon>favorite</Icon>\r\n                          </span>\r\n                        )}\r\n                        <img src={cat.gif.images.original.url} alt=\"gif\" />\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n              : categories.map((cat) => (\r\n                  <div className=\"row centered category-tittle\">\r\n                    <h3 onClick={() => setCurrent(cat.name)}>{cat.name}</h3>\r\n                    <div className=\"row centered\">\r\n                      {store.lc.find((item) => item === cat.name) ? (\r\n                        <span\r\n                          style={{ color: \"red\" }}\r\n                          className=\"icon\"\r\n                          onClick={() =>\r\n                            dispatch({\r\n                              type: \"remove_from_lc\",\r\n                              payload: cat.name,\r\n                            })\r\n                          }\r\n                        >\r\n                          <Icon>favorite</Icon>\r\n                        </span>\r\n                      ) : (\r\n                        <span\r\n                          className=\"icon\"\r\n                          onClick={() =>\r\n                            dispatch({ type: \"add_lc\", payload: cat.name })\r\n                          }\r\n                        >\r\n                          <Icon>favorite</Icon>\r\n                        </span>\r\n                      )}\r\n\r\n                      <img src={cat.gif.images.original.url} alt=\"gif\" />\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n          </aside>\r\n        ) : (\r\n          <button className=\"show-side-btn\" onClick={() => setShowAside(true)}>\r\n            Categories\r\n          </button>\r\n        )}\r\n        <div className=\"wrapper centered row\">\r\n          {gifsArreys.length > 0 && gifsArreys.map((gif) => <Gif gif={gif} />)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Context } from \"../App\";\r\nimport Gif from \"./Gif\";\r\n\r\nconst Search = () => {\r\n  const { key } = useContext(Context);\r\n\r\n  const [gifsArreys, setGifsArreys] = useState([]);\r\n  const [req, setReq] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getGifs = (q) => {\r\n    setLoading(true);\r\n    fetch(`https://api.giphy.com/v1/gifs/search?api_key=${key}&q=${q}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setLoading(false);\r\n        setGifsArreys(data.data);\r\n        console.log(data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"col centered\">\r\n      <h1>Search</h1>\r\n      <div className=\"row centered\">\r\n        <input\r\n          className=\"input_t_s\"\r\n          type=\"text\"\r\n          onChange={(e) => setReq(e.target.value)}\r\n          value={req}\r\n        />\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            setReq(\"\");\r\n            getGifs(req);\r\n          }}\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n      {loading && <h1>Loading...</h1>}\r\n      <div className=\"wrapper centered row\">\r\n        {gifsArreys.length > 0 && gifsArreys.map((gif) => <Gif gif={gif} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useContext } from \"react\";\r\nimport { Context } from \"../App\";\r\nimport Gif from \"./Gif\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nconst LikeList = () => {\r\n  const { store, dispatch } = useContext(Context);\r\n  return (\r\n    <div className=\"like\">\r\n      <div className=\"col\">\r\n        <span\r\n          style={{ margin: \"10px\" }}\r\n          className=\"icon-close\"\r\n          onClick={() => dispatch({ type: \"show_ll\" })}\r\n        >\r\n          <Icon>close</Icon>\r\n        </span>\r\n      </div>\r\n      <h1>Like List</h1>\r\n      {store?.ll.length > 0 ? (\r\n        store.ll.map((item) => <Gif gif={item} />)\r\n      ) : (\r\n        <h1>No like gifs</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LikeList;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Context } from \"../App\";\r\nimport Gif from \"./Gif\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nconst Section = ({ category }) => {\r\n  const { key, dispatch } = useContext(Context);\r\n  const [gifsArrey, setArrey] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getGifs = (q) => {\r\n    setLoading(true);\r\n    fetch(`https://api.giphy.com/v1/gifs/search?api_key=${key}&q=${q}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setArrey(data.data);\r\n        setLoading(false);\r\n        console.log(data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getGifs(category);\r\n  }, []);\r\n  return (\r\n    <section className=\"col section\">\r\n      <h1>\r\n        <span\r\n          className=\"icon-close\"\r\n          onClick={() =>\r\n            dispatch({ type: \"remove_from_lc\", payload: category })\r\n          }\r\n        >\r\n          <Icon>close</Icon>\r\n        </span>\r\n        {category}\r\n        {\"\"}\r\n      </h1>\r\n      <div className=\"row gif-wrapper\">\r\n        {loading && <h1>Loading...</h1>}\r\n        {gifsArrey.length > 0 &&\r\n          gifsArrey.slice(0, 7).map((gif) => <Gif gif={gif} />)}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React, { useContext } from \"react\";\r\nimport { Context } from \"../App\";\r\nimport Section from \"./Section\";\r\n\r\nconst Main = () => {\r\n  const { store } = useContext(Context);\r\n\r\n  return (\r\n    <div className=\"col main\">\r\n      {store.lc?.length > 0 ? (\r\n        store.lc.map((cat) => <Section category={cat} />)\r\n      ) : (\r\n        <h1 className=\" row centered\">No like categories</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useContext } from \"react\";\r\nimport { Context } from \"../App\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nconst Preview = ({ gif }) => {\r\n  const { dispatch } = useContext(Context);\r\n  const { title, user, trending_datetime, images, id } = gif;\r\n\r\n  return (\r\n    <div className=\"col centered prev-wrapper\">\r\n      <div className=\"row centered preview\">\r\n        <img src={images.original.url} alt=\"\" className=\"gif_img\" />\r\n        <div className=\"col info\">\r\n          <span\r\n            className=\"icon-close\"\r\n            onClick={() => dispatch({ type: \"remove_prev_gif\" })}\r\n          >\r\n            <Icon>close</Icon>\r\n          </span>\r\n          {user ? (\r\n            <>\r\n              <div className=\"row centered\">\r\n                {user.avatar_url ? (\r\n                  <img src={user.avatar_url} alt=\"\" className=\"avatar\" />\r\n                ) : (\r\n                  <Icon>person</Icon>\r\n                )}\r\n                <p>{user.display_name}</p>\r\n              </div>\r\n              <p>\r\n                profile : <a href={user.profile_url}>Link</a>\r\n              </p>\r\n              <p>\r\n                Instagram: <a href={user.instagram_url}>Link</a>\r\n              </p>\r\n              <p>\r\n                Data of creationg:{\" \"}\r\n                {trending_datetime.split(\" \")[0].split(\"-\").reverse().join(\".\")}\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <div className=\"row centered\">\r\n              <h1>No user info</h1>\r\n              <Icon>mood_bad</Icon>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import \"./App.css\";\nimport { useReducer, createContext, useEffect } from \"react\";\nimport Trends from \"./Componets/Trends\";\nimport Text from \"./Componets/Text\";\nimport Category from \"./Componets/Category\";\nimport Search from \"./Componets/Search\";\nimport LikeList from \"./Componets/LikeList\";\nimport Main from \"./Componets/Main\";\n\nimport Preview from \"./Componets/Preview\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nexport const Context = createContext(null);\n\nconst reducer = (store, action) => {\n  switch (action.type) {\n    case \"change_tab\":\n      return { ...store, tab: action.payload };\n    case \"show_ll\":\n      return { ...store, showLL: !store.showLL };\n    case \"init\":\n      return { ...store, ll: action.payload };\n    case \"add_to_ll\":\n      return { ...store, ll: [...store.ll, action.payload] };\n    case \"remove_from_ll\":\n      return {\n        ...store,\n        ll: store.ll.filter((item) => item.id !== action.payload.id),\n      };\n    case \"add_prev_gif\":\n      return { ...store, prevGif: action.payload };\n    case \"remove_prev_gif\":\n      return { ...store, prevGif: null };\n    case \"init_lc\":\n      return { ...store, lc: action.payload };\n    case \"add_lc\":\n      return {\n        ...store,\n        lc: [...store.lc, action.payload],\n        alert: { text: \"return: My favorite \", type: \"success\" },\n      };\n    case \"remove_from_lc\":\n      return {\n        ...store,\n        lc: store.lc.filter((item) => item !== action.payload),\n        alert: { text: \"remove from My favorite \", type: \"warning\" },\n      };\n    case \"showAlert\":\n      return { ...store, alert: action.payload };\n\n    default:\n      return store;\n  }\n};\n\nfunction App() {\n  const [store, dispatch] = useReducer(reducer, {\n    tab: \"trends\",\n    showLL: false,\n    ll: [],\n    alert: null,\n  });\n  useEffect(() => {\n    console.log(store.alert);\n    setTimeout(() => {\n      dispatch({ type: \"showAlert\", payload: null });\n    }, 2000);\n  }, [store.alert]);\n\n  useEffect(() => {\n    dispatch({\n      type: \"init\",\n      payload: localStorage.getItem(\"ll\")\n        ? JSON.parse(localStorage.getItem(\"ll\"))\n        : [],\n    });\n\n    dispatch({\n      type: \"init_lc\",\n      payload: localStorage.getItem(\"lc\")\n        ? JSON.parse(localStorage.getItem(\"lc\"))\n        : [],\n    });\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"ll\", JSON.stringify(store.ll));\n  }, [store.ll]);\n\n  useEffect(() => {\n    localStorage.setItem(\"lc\", JSON.stringify(store.lc));\n  }, [store.lc]);\n  return (\n    <div className=\"App col centered\">\n      <header className=\"row header centered\">\n        <button\n          onClick={() => dispatch({ type: \"change_tab\", payload: \"main\" })}\n        >\n          My favorite\n        </button>\n        <button\n          onClick={() => dispatch({ type: \"change_tab\", payload: \"trends\" })}\n        >\n          Trends\n        </button>\n        <button\n          onClick={() => dispatch({ type: \"change_tab\", payload: \"text\" })}\n        >\n          Create Text\n        </button>\n        <button\n          onClick={() => dispatch({ type: \"change_tab\", payload: \"search\" })}\n        >\n          Search\n        </button>\n        <button\n          onClick={() => dispatch({ type: \"change_tab\", payload: \"category\" })}\n        >\n          Category\n        </button>\n        <button onClick={() => dispatch({ type: \"show_ll\" })}>Like List</button>\n      </header>\n      <Context.Provider\n        value={{ store, dispatch, key: \"87JQLyjE7LUEf2bII4WVvYCFmBxEujcz\" }}\n      >\n        {store.tab === \"main\" && <Main />}\n        {store.tab === \"trends\" && <Trends />}\n        {store.tab === \"text\" && <Text />}\n        {store.tab === \"search\" && <Search />}\n        {store.tab === \"category\" && <Category />}\n        {store.showLL && <LikeList />}\n        {store.prevGif && <Preview gif={store.prevGif} />}\n        {store.alert && (\n          <Alert severity={store.alert.type} className=\"alert\">\n            {store.alert.text}\n          </Alert>\n        )}\n      </Context.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}